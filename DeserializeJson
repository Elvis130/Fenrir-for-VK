val r = Json.decodeFromString(StringValue.serializer(), "{\"o\":{\"s\":2, \"t\":8}}")
Log.e(", r.", r.b.toString())


@Serializable(with = StringValueSerializer::class)
    class StringValue {
        var o = 0
        var b = 0
    }

    object StringValueSerializer : KSerializer<StringValue> {
        override val descriptor: SerialDescriptor = buildClassSerialDescriptor("StringValue")

        override fun deserialize(decoder: Decoder): StringValue {
            require(decoder is JsonDecoder)
            val element = decoder.decodeJsonElement()
            val s = StringValue()
            s.b = element.jsonObject["o"]?.jsonObject?.get("s")?.jsonPrimitive?.intOrNull ?: -1
            s.o = element.jsonObject["o"]?.jsonObject?.get("t")?.jsonPrimitive?.intOrNull ?: -1
            return s
        }

        override fun serialize(encoder: Encoder, value: StringValue) {

        }
    }
